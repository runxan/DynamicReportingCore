@model IList<DynaimcReporting.DTO.ParametersDTO>
@{
    ViewBag.Title = "ViewReports";
}
<h5 class="bg-primary clearfix" style="margin:0; padding: 10px;">
    <span style="display: inline-block; margin-top: 4px;">@ViewBag.RptName</span>
    <button class="btn-sm btn btn-default pull-right" style="border: 1px solid #fff; padding: 1px 6px; background-color: transparent; color: #fff;" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
        FILTER
    </button>
</h5>
<div class="collapse" id="collapseExample">
    <div class="well">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="row">
                @for (int i = 0; i < Model.Count(); i++)
                {
                    <div class="col-md-3 form-group">
                        @Html.HiddenFor(x => Model[i].QueryOfMasterReport)
                        @Html.HiddenFor(x => Model[i].ReportMasterId)
                        @Html.HiddenFor(x => Model[i].Label)
                        @Html.HiddenFor(x => Model[i].DisplayName)
                        @Html.HiddenFor(x => Model[i].Query)
                        @Html.HiddenFor(x => Model[i].ParameterDataType)
                        <div class="input-group">
                            <span class="input-group-addon" id="basic-addon1"> @Model[i].DisplayName</span>
                            @*<input type="date" class="form-control" placeholder="Username" aria-describedby="basic-addon1">*@
                            @if (Model[i].ParameterDataType == DynaimcReporting.ENUM.ParameterDataType.Date)
                            {
                                @Html.TextBoxFor(x => Model[i].SearchValue,
                                             new { @type = "date", @class = "form-control" });
                            }
                            else if (Model[i].ParameterDataType == DynaimcReporting.ENUM.ParameterDataType.String)
                            {
                                @Html.TextBoxFor(x => Model[i].SearchValue,
                                             new { @type = "text", @class = "form-control" });
                            }
                            else if (Model[i].ParameterDataType == DynaimcReporting.ENUM.ParameterDataType.Number)
                            {
                                @Html.TextBoxFor(x => Model[i].SearchValue,
                                             new { @type = "number", @class = "form-control" });
                            }
                            else if (Model[i].ParameterDataType == DynaimcReporting.ENUM.ParameterDataType.DropDown)
                            {
                                @Html.DropDownListFor(x => Model[i].SearchValue, Model[i].DDL, new { @class = "form-control" })
                            }
                        </div>

                    </div>
                }

            </div>
            <input type="button" value="Show" id="btnShow" class="btn btn-block btn-success" style="margin-right: 0; max-width: 100%;" />

        }


    </div>
</div>

<div style="padding: 10px 10px 0;">
    <div id="ReportTbl">
        @*<div class="card-body">*@
        <input type="button" id="btnExport" class="btn btn-primary" value="download">
        <table id="grid" class='table table-striped table-bordered dt-responsive nowrap compact' width='100 % ' cellspacing='0'>
            <thead>

            </thead>
            <tbody>
            </tbody>
            @*<tfoot>

                </tfoot>*@
        </table>

    </div>
</div>
@*</div>*@
@section Scripts {
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/datatables/js/jquery.dataTables.js"></script>
    @*<script>
            var fileName = "@ViewBag.RptName" + "-" + (new Date()).toLocaleDateString('en-US');
        ;
            $('#grid').dataTable({
                dom: 'Bfrtip',
                ser
                buttons: [
                    {
                        extend: 'excel',
                        title: fileName,

                    }
                ]
            });
            $('.buttons-excel').addClass("btn btn-primary");
            $('.buttons-excel').text("Download");
            </script>*@

    <script>

        $("#ReportTbl").hide();
        var i = 0;
        $("#btnShow").click(function (e) {
            /* debugger*/
            var listParameters = $('form').serializeObject();
            $.ajax({
                url: "/Reportmasters/ViewReports",
                method: "POST",
                data: { listParameters: listParameters },
                success: function (result) {

                    debugger
                    //$("#excelandclose").show();
                    $("#ReportTbl").show();
                    var columns = [];
                    result = JSON.parse(result);
                    columnNames = Object.keys(result.aaData[0]);
                    for (var i in columnNames) {
                        columns.push({
                            data: columnNames[i],
                            title: capitalizeFirstLetter(columnNames[i])
                        });
                    }
                    if (i > 0) {
                        if ($.fn.DataTable.isDataTable("#grid")) {
                            $('#grid').DataTable().destroy();
                            $('#grid').html("");
                        }
                    }
                    $('#grid').dataTable({
                        "searching": false,
                        "ordering": false,
                        "bServerSide": true,
                        "sAjaxSource": "/Reportmasters/ViewReports",
                        "fnServerData": function (sSource, aoData, fnCallback) {
                            var param = {};
                            $.each(aoData, function () {
                                if (param[this.name]) {
                                    if (!param[this.name].push) {
                                        param[this.name] = [param[this.name]];
                                    }
                                    param[this.name].push(this.value || '');
                                } else {
                                    param[this.name] = this.value || '';
                                }
                            });
                            $.ajax({
                                "url": sSource,
                                "type": "POST",
                                "data": { listParameters: listParameters, sEcho: "", iDisplayStart: param.iDisplayStart, iDisplayLength: param.iDisplayLength, sSearch: "" },
                                "success": function (response) {

                                    response = JSON.parse(response);
                                    debugger
                                    fnCallback(response)
                                }
                            });
                        },
                        /*       "bDestroy": true,*/
                        "aoColumns": columns
                    });
                    i++;
                }
            });
        });

        $.fn.serializeObject = function () {
            var Parameters = [];
            var listParameters = {};
            var number = 0;
            $.each(this.serializeArray(), function () {
                var subStr = this.name.split('.');
                var part = subStr[0].substring(
                    subStr[0].lastIndexOf("[") + 1,
                    subStr[0].lastIndexOf("]")
                );
                if (number != part) {
                    Parameters.push(listParameters);
                    listParameters = {};
                }
                number = part;
                if (listParameters[subStr[1]]) {
                    if (!listParameters[subStr[1]].push) {
                        listParameters[subStr[1]] = [listParameters[subStr[1]]];
                    }
                    listParameters[subStr[1]].push(this.value || '');
                } else {
                    listParameters[subStr[1]] = this.value || '';
                }
            });
            Parameters.push(listParameters);
            return Parameters;
        };
        function capitalizeFirstLetter(string) {
            return string.charAt(0).toUpperCase() + string.slice(1);
        }



        //$("#btnExport").click(function (e) {
        //  //debugger
        //    var listParameters = $('form').serializeObject();
        //    $.ajax({
        //       cache: false,
        //        url: '/Reportmasters/Download',
        //        type: "post",
        //        data: { listParameters: listParameters },
        //        //contentType: 'application/json;charset=utf-8',
        //        //datatype: "json",
        //        success: function (data) {
        //            alert("Called")
        //            debugger
        //            window.location = '/Reportmasters/DownloadExcel?fileGuid=' + data.FileGuid
        //                + '&filename=' + data.FileName;
        //        },
        //        error: function (data) {
        //            debugger
        //            alert("failed to add Bank");
        //        }
        //    })



        //});


        $("#btnExport").click(function (e) {
            debugger
            var listParameters = $('form').serializeObject();
            $("#btnExport").prop('disabled', true);
            $.ajax({
                //  cache: false,
                url: '/Reportmasters/Download',
                type: "post",
                data: { listParameters: listParameters },
                //contentType: 'application/json;charset=utf-8',
                //datatype: "json",
                success: function (data) {
                    //alert("Called")
                    //debugger
                    window.location = '/Reportmasters/DownloadExcel?file=' + data.file;
                    $("#btnExport").prop('disabled', false);
                },
                error: function (data) {
                    debugger
                    alert("failed to add Bank");
                }
            })



        });

    </script>
}
